@import url('https://fonts.googleapis.com/css?family=Raleway:400,700,900&display=swap&subset=cyrillic,cyrillic-ext,greek,greek-ext,latin-ext,vietnamese');

:root {
  height: 100%;
  font-family: 'Raleway', sans-serif;
  color: var(--text-over-background);
  background-color: var(--background);
}

body {
  margin: 0;
  height: 100%;
}

#root {
  position: relative;
  width: 100%;
  height: 100%;
}

.invisible {
  opacity: 0;
}
.visible {
  opacity: 1;
}

::selection {
  color: var(--secondary);
  background-color: var(--primary);
}

.overlay {
  z-index: 100;
  position: fixed;
  width: 100vw;
  height: 100vh;
  left: 0;
  top: 0;
  background-color: var(--overlay-background);

  .overlayForeground {
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    background-color: var(--book-background);
  }
  // color: var();
}

.fileOverlay {
  transition: .4s ease;
  border: 10px dashed var(--secondary);
  box-sizing: border-box;
  pointer-events: none;

  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 2.5rem;
  font-family: Arial, Helvetica, sans-serif;
  color: var(--text-over-primary);
  background-color: var(--book-background);
}

.topLeft {
  position: absolute;
  top: 0;
  left: 0;
}
.topRight {
  position: absolute;
  top: 0;
  right: 0;
}
.bottomLeft {
  position: absolute;
  bottom: 0;
  left: 0;
}
.bottomRight {
  position: absolute;
  bottom: 0;
  right: 0;
}

button {
  appearance: none;
  -webkit-appearance: none;
  font: inherit;
  padding: 0;
  background-color: transparent;
  border: none;
  outline: none;
}

.list {
  margin: 0;
  padding: 0;
  list-style: none;
  counter-reset: listCounter;
}

.menuLink {
  position: relative;
  z-index: 3;

  display: inline-flex;
  justify-content: start;
  align-items: center;
  color: #888;
  text-decoration: none;

  margin-left: 25px;
  &:first-child {
    margin-left: 0;
  }

  cursor: pointer;

  .text {
    position: relative;
    font-size: 0.8rem;
  }

  .text::after {
    content: '';
    transition: .2s ease;
    position: absolute;
    width: 0;
    height: 2px;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    background-color: var(--primary);
    pointer-events: none;
  }
  &:hover .text::after {
    width: 100%;
  }

  img {
    --icon-size: 16px;
    display: block;
    width: var(--icon-size);
    height: var(--icon-size);
    background-position: center;
    background-size: cover;
    margin-right: 5px;
    filter: invert(0.5);
  }
}

.colorChooser {
  background: linear-gradient(90deg,
    hsl(000, 100%, 50%),
    hsl(060, 100%, 50%),
    hsl(120, 100%, 50%),
    hsl(180, 100%, 50%),
    hsl(240, 100%, 50%),
    hsl(300, 100%, 50%),
    hsl(360, 100%, 50%),
  );
  color: transparent;
  user-select: none;

  .colorPreview {
    position: absolute;
    height: 100%;
    width: 5px;
    top: 0;
    pointer-events: none;

    &::after {
      content: '';
      position: absolute;
      width: 25px;
      height: 25px;
      border-radius: 50%;
      background-color: var(--primary);
      left: 50%;
      bottom: 0;
      transform: translate(-50%, 100%) rotate(90deg);
      mask-image: url(../img/arrow.svg);
      -webkit-mask-image: url(../img/arrow.svg);
    }
  }
}

.plate {
  padding: 10px;
  display: block;
  text-align: center;
  box-sizing: border-box;
}

.mainPage {
  position: absolute;
  width: 100%;
  height: 100%;

  .links {
    position: absolute;
    width: calc(100% - 36px);
    height: calc(100% - 36px);
    margin: 18px;
    box-sizing: border-box;
  }

  background-color: var(--primary);
  .foreground {
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: var(--background);
  }
  &.isLoading .foreground {
    clip-path: circle(0% at 0 0);
  }

  .mainPageCenterContent {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: auto auto;

    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  h1 {
    text-align: center;
    font-weight: 700;
    font-size: 4vw;
    position: relative;
    grid-column: span 2;
    margin: 0;
    margin-bottom: 15vh;

    &::after {
      content: '';
      display: block;
      width: 150px;
      height: 2px;
      background-color: var(--primary);
      position: absolute;
      bottom: -50%;
      left: 50%;
      transform: translateX(-50%);
    }
  }

  .menu {
    position: relative;
    width: 320px;
    height: 120px;
    font-size: 19px;

    .subtitle {
      font-size: 0.8rem;
      display: block;
      text-align: center;
    }

    .content {
      position: absolute;
      width: 90%;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
  }

  label {
    color: var(--text-over-primary);
    background-color: var(--primary);
    cursor: pointer;
  }

  input {
    display: none;
  }
}

.overlayMenu {
  width: 400px;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  h2 {
    text-align: center;
    font-size: 2rem;
    margin-top: 1rem;
  }

  .list {
    max-height: 100%;
    overflow-y: auto;
  }

  .closeButton {
    position: relative;
    width: 40px;
    height: 40px;
    margin: 15px 0;
    border-radius: 50%;
    cursor: pointer;
    left: 50%;
    transform: translateX(-50%);

    &::before, &::after {
      content: '';
      width: 80%;
      height: 2px;
      background-color: var(--text-over-background);
      position: absolute;
      top: 50%;
      left: 50%;
    }
    &::before {
      transform: translate(-50%, -50%) rotate(45deg);
    }
    &::after {
      transform: translate(-50%, -50%) rotate(-45deg);
    }
  }
}

.listItem {
  position: relative;
  margin-bottom: 40px;
  font-size: 1rem;

  .name {
    &::before {
      content: counter(listCounter) '.';
      counter-increment: listCounter;
      position: relative;
      left: 0;
      margin-right: 5px;
    }

    margin-bottom: 10px;
    display: block;
  }
}

.switch {
  input {
    display: none;
  }

  label {
    cursor: pointer;
  }

  .switchGraphic {
    display: inline-block;
    position: relative;
    vertical-align: middle;
    width: 16px;
    height: 16px;
    border: 1px solid var(--text-over-background);
    border-radius: 0;
    background-color: transparent;

    &::before {
      content: '';
      transition: .4s opacity;
      position: absolute;
      width: 10px;
      height: 10px;
      background-color: #aaa;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    &.off::before {
      opacity: 0;
    }
    &.on::before {
      opacity: 1;
    }
  }

  .text {
    font-size: .8rem;
    display: inline-block;
    vertical-align: middle;
    position: relative;
    margin-left: 15px;
  }
}

.numberInput {
  label {
    display: flex;
    justify-content: start;
    align-items: center;
  }

  input, button {
    display: inline-block;
    position: relative;
    border: none;
    background-color: transparent;
    color: var(--text-over-background);
    text-align: center;
    font: inherit;
  }

  input {
    width: 40px;
    border-radius: 0;

    &:focus {
      outline: none;
    }
  }

  button {
    --size: 1rem;
    height: var(--size);
    width: var(--size);
    margin-left: 10px;
    border-radius: 50%;
    cursor: pointer;

    background-size: contain;
    background-position: center;

    filter: invert(0.5);

    &.plus {
      background-image: url(../img/plus.svg);
    }
    &.minus {
      background-image: url(../img/minus.svg);
    }
  }

  .text {
    font-size: .8rem;
    display: inline-block;
    position: relative;
  }
}

.repeatList {
  width: 100%;
  height: 100%;

  h2 {
    margin-top: 40px;
  }

  .list {
    width: 400px;
    height: 100%;
    overflow-y: scroll;
    margin: auto;
  }

  .closeButton {
    &::before, &::after {
      background-color: var(--text-over-background);
    }
  }
}

.repeatListItem {
  max-height: 500px;
  transition: max-height .2s;
  margin: 10px;
  padding: 10px;
  box-shadow: 0 0 10px 0 #0003;
  background-color: var(--background);

  .wordContainer {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .word {
    width: 100%;
    margin-right: 5px;
    position: relative;

    &::before {
      content: '';
      width: 16px;
      height: 16px;
      background-image: url(../img/edit.svg);
      position: absolute;
      left: 5px;
      top: 50%;
      transform: translateY(-55%);
      background-size: contain;
      pointer-events: none;
      filter: invert(0.5);
    }

    input {
      padding: 5px;
      padding-left: 24px;
      display: block;
      width: 100%;
      box-sizing: border-box;
      border: none;
      background-color: var(--background);
      color: var(--text-over-background);

      &:focus {
        outline: 1px solid var(--text-over-background);
        outline-offset: 0;
      }
    }
  }

  .removeButton {
    display: block;
    width: 20px;
    height: 20px;
    position: relative;
    cursor: pointer;

    transition: .2s transform;
    &:hover {
      transform: scale(1.2);
    }

    &::before, &::after {
      content: '';
      width: 80%;
      height: 2px;
      background-color: var(--text-over-background);
      position: absolute;
      top: 50%;
      left: 50%;
    }
    &::before {
      transform: translate(-50%, -50%) rotate(45deg);
    }
    &::after {
      transform: translate(-50%, -50%) rotate(-45deg);
    }

  }
}

.settings {
  .colorChooser {
    border-radius: 10px;
  }
}

.help {
  .helpText {
    margin: 0 10px;
    font-size: 0.8rem;
  }
}

.pageCounter {
  cursor: pointer;
  position: relative;

  &::after {
    content: '';
    height: 1px;
    background-color: #777;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    bottom: -5px;

    transition: .2s width;
    width: 0;
  }

  &:hover::after {
    width: 100%;
  }
}

.pageInput {
  display: inline-block;
  font: inherit;
  color: inherit;
  border: none;
  margin: 0 5px;
  box-sizing: border-box;
  width: 50px;
  text-align: center;
  &:focus {
    outline: 1px solid #777;
    outline-offset: 0;
  }
}

.xmlUi {
  position: relative;
  width: 100%;
  height: 100%;
  display: grid;
  --top-bar-height: 60px;
  --bottom-bar-height: 80px;
  --text-height: calc(100vh - var(--top-bar-height) - var(--bottom-bar-height));
  grid-template-rows:
    var(--top-bar-height)
    var(--text-height)
    var(--bottom-bar-height);
  --page-button-size: 100px;
  grid-template-columns: var(--page-button-size) 1fr var(--page-button-size);
  background-color: var(--book-background);

  &:focus {
    outline: none;
  }

  .pageButton {
    grid-row: span 3;
    position: relative;
    width: 100%;
    height: 100%;
    cursor: pointer;
    transition: .2s ease;
    transition-property: opacity;

    &.inactive {
      opacity: 0;
      cursor: auto;
    }

    &::after {
      content: '';
      position: absolute;
      width: 50px;
      height: 50px;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      transition: .2s;
      mask-image: url(../img/arrow.svg);
      -webkit-mask-image: url(../img/arrow.svg);
    }
    &.active::after {
      background-color: #ccc;
    }
    &.active:hover::after {
      background-color: var(--primary);
    }

    &.nextButton {
      transform: scaleX(-1);
    }
  }

  .pageCounterContainer {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    color: #777;
    font-size: 0.8rem;
  }
}

.bookMenuWrapper {
  position: relative;

  .barsContainer {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;

    .bottomBar {
      pointer-events: none;
    }

    .topBar,
    .bottomBar {
      position: relative;
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
      transform: translateY(-100%);
      transition: .2s transform;
    }

    &:hover,
    &.pinned {
      .topBar,
      .bottomBar {
        transform: translateY(0%);
      }
    }

    .fontSize {
      display: inline-flex;
      margin-left: 50px;
      align-items: center;

      button {
        margin-left: 10px;
        padding: 5px;

        img {
          --icon-size: 20px;
          margin-right: 0;
        }
      }
    }
  }

  .desktopTopBar {
    position: absolute;
    display: inline-flex;
    align-items: center;
  }
}

.mobileBookMenu {
  .list {
    overflow-y: initial;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .menuLink {
    margin: 0;
    margin-top: 15px;
    position: relative;
    img {
      filter: invert(0.5);
      --icon-size: 24px;
    }
    .text {
      font-size: 1.2rem;
    }
  }
}

.pdfUi {
  position: relative;

  .bookMenuWrapper {
    position: fixed;
    z-index: 1;
    width: 100%;

    .barsContainer {
      left: 50%;
      transform: translateX(-50%);
      width: 100%;
      height: 60px;

      .topBar {
        background-color: var(--background);
      }

      .bottomBar {
        opacity: 0;
      }
    }

    .pageCounterContainer {
      display: inline-flex;
      margin-left: 20px;
    }
  }
}

.react-pdf__Document {
  overflow: visible;
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  ::selection {
    color: transparent;
  }
}

.react-pdf__Page__annotations {
  display: none;
}

.pdfPageContainer {
  position: absolute;
}

.selectionPopup {
  position: absolute;
  transform: translate(-50%, -100%);
  background-color: var(--background);
  padding: 18px;
  width: 250px;
  box-shadow: 0 0 8px 0 #0008;
  z-index: 3;

  .translation {
    height: 100px;
    overflow-y: scroll;
  }

  .word {
    position: relative;

    input {
      font: inherit;
      background-color: var(--background);
      color: var(--text-over-background);
      font-weight: 700;
      border: none;
      padding: 5px;
      padding-right: 24px;
      padding-left: 0;
      box-sizing: border-box;
      width: 100%;
      &:focus {
        outline: 1px solid var(--text-over-background);
        outline-offset: 0;
      }
    }

    &::after {
      content: '';
      width: 16px;
      height: 16px;
      background-image: url(../img/edit.svg);
      position: absolute;
      right: 5px;
      top: 50%;
      transform: translateY(-50%);
      background-size: contain;
      pointer-events: none;
      filter: invert(0.5);
    }
  }

  .buttons {
    margin-top: 15px;
    display: flex;
    justify-content: space-between;

    .button {
      cursor: pointer;
      display: inline-block;
      box-sizing: border-box;
      text-align: center;
      padding: 5px 15px;
      background-color: var(--primary);
      color: var(--text-over-primary);
    }
  }
}

.translation {
  word-wrap: break-word;
  white-space: pre-line;
  margin-top: 10px;

  .placeholder {
    color: #0003;
    &::after {
      content: 'Loading...';
    }
  }
}

.xmlTextWindow {
  position: relative;

  column-count: 2;
  column-gap: 40px;
  width: 100%;
  height: 100%;
  overflow: hidden;
  font-size: 1rem;
}

p {
  margin: 0 0 20px;
}

[xmltagname="subtitle"] {
  margin: 40px 0 30px;
}

img {
  display: block;
  max-height: calc(100vh - 120px);
  max-width: calc(50vw - 120px);
  margin: 0 auto;
  user-select: none;
  -webkit-user-drag: none;
}

[xmltagname="poem"] {
  margin: 50px 100px;
}

// We can't have p inside h1 because it's invalid html, so instead we make it
// a span and set "display: block" to add linebreaks between parts of the title
[xmltagname="p-inside-title"] {
  display: block;
}
